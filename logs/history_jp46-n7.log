  993  cd d2
  994  python manage.py drive
  995  cd projects/
  996  git clone https://github.com/pyenv/pyenv.git
  997  cd pyenv/
  998  ll
  999  curl https://pyenv.run | bash
 1000  sudo apt-get install curl
 1001  curl https://pyenv.run | bash
 1002  exec $SHELL
 1003  cd
 1004  vi .bashrc
 1005  pyenv
 1006  vi .bashrc
 1007  exec $SHELL
 1008  pyenv
 1009  pyenv list
 1010  vi .bashrc
 1011  echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
 1012  echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
 1013  echo 'eval "$(pyenv init -)"' >> ~/.bashrc
 1014  vi .bashrc
 1015  exec $SHELL
 1016  pyenv
 1017  pyenv install 3.7
 1018  pyenv install 3.7.13
 1019  pyenv upgrade
 1020  pyenv update
 1021  python -v
 1022  python --version
 1023  python3 --version
 1024  pyenv global 3.7.13
 1025  python3 --version
 1026  source env/bin/activate
 1027  cd d2
 1028  python3 --version
 1029  pyenv global 3.7.13
 1030  python3 --version
 1031  deactivate
 1032  cd
 1033  cd projects/
 1034  ll
 1035  cd donkeycar/
 1036  ../install-jp46.sh 
 1037  python --version
 1038  source ~/env/bin/activate
 1039  python --version
 1040  penv
 1041  curl https://pyenv.run | bash
 1042  pyenv
 1043  pyenv install 3.7.13
 1044  pyenv global 3.7.13
 1045  python -V
 1046  cd
 1047  cd d2
 1048  python manage.py drive
 1049  source ~/env/bin/activate
 1050  python manage.py drive
 1051  pyenv
 1052  pyenv doctor
 1053  pyenv shims
 1054  pyenv virtualenvs
 1055  pyenv install --list
 1056  pyenv doctor
 1057  sudo apt-get install --yes libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libgdbm-dev lzma lzma-dev tcl-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev wget curl make build-essential openssl
 1058  pyenv doctor
 1059  pyenv
 1060  pyenv virtualenvs
 1061  mv .pyenv .pyenv.dis
 1062  pyenv
 1063  python -V
 1064  cd projects/
 1065  cd donkeycar/
 1066  ll
 1067  cp install.nano.sh install.nano.sh.bak 
 1068  ll
 1069  ../install-jp46.sh 
 1070  penv
 1071  cd
 1072  pyenv
 1073  cd projects/
 1074  cd donkeycar/
 1075  pyenv
 1076  ../install-jp46.sh 
 1077  pyenv version list
 1078  pyenv versions
 1079  ../install-jp46.sh 
 1080  python -V
 1081  source ~/env/bin/activate
 1082  python -V
 1083  cd
 1084  cd d2
 1085  python manage.py drive
 1086  pip install pandas
 1087  python manage.py drive
 1088  python 
 1089  pip install cv2
 1090  cd
 1091  c d projects/
 1092  ll
 1093  cd
 1094  cd projects/
 1095  ll
 1096  # a fresh start, so check for updates
 1097  $ sudo apt-get update
 1098  $ sudo apt-get upgrade
 1099  # install nano
 1100  $ sudo apt-get install nano
 1101  # install dphys-swapfile
 1102  $ sudo apt-get install dphys-swapfile
 1103  # enlarge the boundary (4.5.2, 4.5.3, 4.5.4 and 4.5.5)
 1104  $ sudo nano /sbin/dphys-swapfile
 1105  # give the required memory size
 1106  $ sudo nano /etc/dphys-swapfile
 1107  # reboot afterwards
 1108  cd
 1109  jtop
 1110  cd projects/
 1111  ll
 1112  cd resizeSwapMemory/
 1113  ll
 1114  more setSwapMemorySize.sh 
 1115  more setSwapMemorySize.sh -g 6
 1116  ./setSwapMemorySize.sh -g 6
 1117  sudo reboot
 1118  cd
 1119  cd projects/
 1120  ll
 1121  git clone https://github.com/Heavy02011/myAutoware.git
 1122  cd
 1123  cd Downloads/
 1124  ll
 1125  sudo apt-get install ./gh_2.12.1_linux_amd64.deb 
 1126  ll
 1127  rm *amd*
 1128  ll
 1129  sudo apt-get install ./gh_2.12.1_linux_arm64.deb 
 1130  gh auth login
 1131  cd
 1132  cd projects/
 1133  git clone https://github.com/Heavy02011/myAutoware.git
 1134  cd myAutoware/
 1135  ll
 1136  cd lidar/
 1137  ll
 1138  python display-lidar.py 
 1139  jtop
 1140  python -V
 1141  python
 1142  cd projects/
 1143  cd
 1144  sudo sh -c "echo '/usr/local/cuda/lib64' >> /etc/ld.so.conf.d/nvidia-tegra.conf"
 1145  sudo ldconfig
 1146  sudo apt-get install build-essential cmake git unzip pkg-config
 1147  sudo apt-get install libjpeg-dev libpng-dev libtiff-dev
 1148  cd ~
 1149  wget -O opencv.zip https://github.com/opencv/opencv/archive/4.5.1.zip
 1150  wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.5.1.zip
 1151  unzip opencv.zip
 1152  unzip opencv_contrib.zip
 1153  mv opencv-4.5.1 opencv
 1154  mv opencv_contrib-4.5.1 opencv_contrib
 1155  rm opencv.zip
 1156  rm opencv_contrib.zip
 1157  cd ~/opencv
 1158  mkdir build
 1159  cd build
 1160  cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules -D EIGEN_INCLUDE_PATH=/usr/include/eigen3 -D WITH_OPENCL=OFF -D WITH_CUDA=ON -D CUDA_ARCH_BIN=5.3 -D CUDA_ARCH_PTX="" -D WITH_CUDNN=ON -D WITH_CUBLAS=ON -D ENABLE_FAST_MATH=ON -D CUDA_FAST_MATH=ON -D OPENCV_DNN_CUDA=ON -D ENABLE_NEON=ON -D WITH_QT=OFF -D WITH_OPENMP=ON -D WITH_OPENGL=ON -D BUILD_TIFF=ON -D WITH_FFMPEG=ON -D WITH_GSTREAMER=ON -D WITH_TBB=ON -D BUILD_TBB=ON -D BUILD_TESTS=OFF -D WITH_EIGEN=ON -D WITH_V4L=ON -D WITH_LIBV4L=ON -D OPENCV_ENABLE_NONFREE=ON -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=OFF -D BUILD_NEW_PYTHON_SUPPORT=ON -D BUILD_opencv_python3=TRUE -D OPENCV_GENERATE_PKGCONFIG=ON -D BUILD_EXAMPLES=OFF ..
 1161  make -j4
 1162  cd
 1163  sudo rm -r /usr/include/opencv4/opencv2
 1164  cd ~/opencv/build
 1165  ll
 1166  sudo make install
 1167  sudo ldconfig
 1168  make clean
 1169  sudo apt-get update
 1170  python
 1171  cd
 1172  source env/bin/activate
 1173  python
 1174  ll
 1175  cd opencv
 1176  ll
 1177  sudo make install
 1178  cd build/
 1179  ll
 1180  cd opencv2/
 1181  ll
 1182  cd ..
 1183  cd lib/
 1184  ll
 1185  cd ..
 1186  cd
 1187  cd d2
 1188  python3
 1189  jtop
 1190  python -V
 1191  python
 1192  jtop
 1193  pip install opencv-python
 1194  python
 1195  source env/bin/activate
 1196  python
 1197  cd d2
 1198  python manage.py drive
 1199  cd
 1200  cd projects/
 1201  ll
 1202  cd myAutoware/
 1203  ll
 1204  cd lidar/
 1205  ll
 1206  python display-lidar.py 
 1207  lsusb
 1208  python display-lidar.py 
 1209  ll /dec/tty*
 1210  sudo ll /dec/tty*
 1211  sudo ls -l /dec/tty*
 1212  sudo ls -l /dev/tty*
 1213  python display-lidar.py 
 1214  sudo adduser $USER dialout
 1215  echo $USER
 1216  python display-lidar.py 
 1217  sudo python display-lidar.py 
 1218  python display-lidar.py 
 1219  sudo ls -l /dev/tty*
 1220  sudo chown :rainer /dev/ttyUSB0
 1221  sudo ls -l /dev/tty*
 1222  python display-lidar.py 
 1223  cd ..
 1224  cd donkeycar/
 1225  cd donkeycar
 1226  cd parts/
 1227  ll
 1228  python lidar.py 
 1229  history
 1230  gst-launch-1.0 nvarguscamerasrc sensor_id=0 !    'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=30/1' !    nvvidconv flip-method=0 ! 'video/x-raw,width=960, height=540' !    nvvidconv ! nvegltransform ! nveglglessink -e
 1231  cd
 1232  cd projects/
 1233  git clone https://github.com/JetsonHacksNano/CSI-Camera.git
 1234  cd
 1235  cd d2
 1236  python manage.py drive
 1237  cd
 1238  gst-launch-1.0 nvarguscamerasrc sensor_id=0 ! >    'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=30/1' ! >    nvvidconv flip-method=0 ! 'video/x-raw,width=960, height=540' ! >    nvvidconv ! nvegltransform ! nveglglessink -e
 1239  gst-launch-1.0 nvarguscamerasrc sensor_id=0 !    'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=30/1' !    nvvidconv flip-method=0 ! 'video/x-raw,width=960, height=540' !    nvvidconv ! nvegltransform ! nveglglessink -e
 1240  cd projects/
 1241  ll
 1242  cd CSI-Camera/
 1243  ll
 1244  $ python simple_camera.py
 1245  $ python ./simple_camera.py
 1246  python
 1247  ./simple_camera.py 
 1248  $ python face_detect.py
 1249  ./face_detect.py
 1250  cd
 1251  cd d2
 1252  python manage.py drive
 1253  pip install pigpio
 1254  python manage.py drive
 1255  cd
 1256  cd projects/donkeycar/donkeycar/parts/
 1257  python lidar.py 
 1258  cd
 1259  cd d2
 1260  python manage.py drive
 1261  pip install v4l2capture
 1262  gcc
 1263  pip install v4l2capture
 1264  python manage.py drive
 1265  sudo apt-get install libv4l-dev
 1266  cd
 1267  cd projects/
 1268  git clone https://github.com/atareao/python3-v4l2capture.git
 1269  cd python3-v4l2capture/
 1270  python setup.py build
 1271  pip install -e .
 1272  cd
 1273  cd d2
 1274  python manage.py drive
 1275  sudo apt-get install -y python-dev libsdl1.2-dev libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-ttf2.0-dev libsdl1.2-dev libsmpeg-dev python-numpy subversion libportmidi-dev ffmpeg libswscale-dev libavformat-dev libavcodec-dev libfreetype6-dev
 1276  pip3 install pygame
 1277  python manage.py drive
 1278  deactivate 
 1279  source ~/env/bin/activate
 1280  python manage.py drive
 1281  lsusb
 1282  python manage.py drive
 1283  cd
 1284  cd projects/
 1285  cd myAutoware/
 1286  cd lidar/
 1287  python display-lidar.py 
 1288  sudo ll /dev/ttyUSB0
 1289  sudo ls -l /dev/ttyUSB0
 1290  sudo adduser $USER dialout
 1291  python display-lidar.py 
 1292  sudo reboot
 1293  sudo docker run --net=host --runtime nvidia --rm --ipc=host -v /tmp/.X11-unix/:/tmp/.X11-unix/ -v /tmp/argus_socket:/tmp/argus_socket --cap-add SYS_PTRACE -e DISPLAY=$DISPLAY -it nvcr.io/nvidia/l4t-base:r32.5.0
 1294  sudo docker run --runtime nvidia --network host -it -e DISPLAY=$DISPLAY -v /tmp/.X11-unix/:/tmp/.X11-unix nvcr.io/nvidia/l4t-base:r32.2
 1295  sudo docker run --runtime nvidia --network host -it -e DISPLAY=$DISPLAY -v /tmp/.X11-unix/:/tmp/.X11-unix nvcr.io/nvidia/l4t-base:latest
 1296  v4l2-ctl -d /dev/video0 --set-fmt-video=width=1920,height=1080,pixelformat=RG10 --set-ctrl bypass_mode=0 --stream-mmap --stream-count=100
 1297  v4l2-ctl 
 1298  cd projects/
 1299  git clone https://github.com/otamajakusi/dockerfile-yolov5-jetson.git
 1300  ll
 1301  cd dockerfile-yolov5-jetson/
 1302  ll
 1303  more setup.sh 
 1304  ./setup.sh 
 1305  more build.sh 
 1306  ./build.sh
 1307  ./build.sh --no-cache
 1308  ./run-csi-camera.sh 
 1309  cd ..
 1310  git clone git clone https://github.com/jrouleau/bluetooth-autoconnect.git
 1311  git clone https://github.com/jrouleau/bluetooth-autoconnect.git
 1312  cd bluetooth-autoconnect/
 1313  ll
 1314  more bluetooth-autoconnect
 1315  ./bluetooth-autoconnect 
 1316  sudo apt-get install python-prctl  python-dbus bluez
 1317  ./bluetooth-autoconnect 
 1318  sudo apt-get dbus
 1319  sudo apt-get install dbus
 1320  sudo apt autoremove
 1321  ./bluetooth-autoconnect 
 1322  pip install dbus
 1323  pip install python-dbus
 1324  pip install dbus-python
 1325  pip install wheel
 1326  pip install dbus-python
 1327  sudo apt-get install libdbus-1-dev libdbus-glib-1-dbus
 1328  sudo apt install build-essential libdbus-glib-1-dev libgirepository1.0-dev
 1329  pip install dbus-python
 1330  ./bluetooth-autoconnect 
 1331  sudo apt install libcairo2-dev
 1332  ./bluetooth-autoconnect 
 1333  sudo apt install libcairo2-dev
 1334  sudo apt install libxt-dev
 1335  sudo apt install libgirepository1.0-dev
 1336  pip install pycairo
 1337  pip install PyGObject
 1338  ./bluetooth-autoconnect 
 1339  ./bluetooth-autoconnect -d
 1340  ll
 1341  sudo ./bluetooth-autoconnect /usr/local/bin
 1342  sudo cp ./bluetooth-autoconnect /usr/local/bin
 1343  sudo cp ./bluetooth-autoconnect.service /etc/systemd/system
 1344  sudo systemctl enable bluetooth-autoconnect
 1345  sudo systemctl restart bluetooth-autoconnect
 1346  more bluetooth-autoconnect.service 
 1347  more bluetooth-autoconnect
 1348  saudo reboot
 1349  sudo reboot
 1350  bluetooth-autoconnect 
 1351  bluetooth-autoconnect -d
 1352  sudo systemctl enable bluetooth-autoconnect
 1353  sudo systemctl start bluetooth-autoconnect
 1354  sudo systemctl restart bluetooth-autoconnect
 1355  sudo systemctl stop bluetooth-autoconnect
 1356  sudo systemctl restart bluetooth-autoconnect
 1357  bluetooth-autoconnect 
 1358  sudo systemctl status
 1359  sudo systemctl status|grep blu
 1360  sudo systemctl status|grep bluetooth-autoconnect
 1361  sudo vi /etc/bluetooth/main.conf 
 1362  bluetooth-autoconnect
 1363  sudo bluetoothctl trust 7C:BB:8A:7A:2B:4B
 1364  sudo bluetoothctl info 7C:BB:8A:7A:2B:4B
 1365  sudo bluetoothctl remove 7C:BB:8A:7A:2B:4B
 1366  sudo bluetoothctl trust 7C:BB:8A:7A:2B:4B
 1367  sudo systemctl enable bluetooth.service
 1368  sudo systemctl start bluetooth.service
 1369  sudo systemctl enable bluetooth-autoconnect.service
 1370  sudo systemctl start bluetooth-autoconnect.service
 1371  which bluetooth-autoconnect
 1372  pip list|grep img
 1373  pip uninstall imgaug
 1374  cd projects/
 1375  ll
 1376  cd installDonkeycarJetsonNanoJP46/
 1377  git pull
 1378  cd
 1379  cd projects/
 1380  cd installDonkeycarJetsonNanoJP46/
 1381  git status 
 1382  git add *
 1383  git commit -m"got CSI-camera working with python"
 1384  git push
 1385  sudo crontab 
 1386  sudo crontab -h
 1387  sudo crontab -l
 1388  sudo crontab -e
 1389  source env/bin/activate
 1390  pip uninstall imgaug
 1391  cd projects/
 1392  cd CSI-Camera/
 1393  ll
 1394  ./simple_camera.
 1395  ./simple_camera.py 
 1396  vi simple_camera.py 
 1397  ./simple_camera.py 
 1398  vi simcam.py 
 1399  ./simple_camera.py 
 1400  ./simcam.py 
 1401  vi ./simcam.py 
 1402  ./simcam.py 
 1403  vi ./simcam.py 
 1404  ./simcam.py 
 1405  vi ./simcam.py 
 1406  ./simcam.py 
 1407  vi ./simcam.py 
 1408  ./simcam.py 
 1409  vi ./simcam.py 
 1410  ./simcam.py 
 1411  sudo systemctl disnable bluetooth-autoconnect
 1412  sudo systemctl disable bluetooth-autoconnect
 1413  sudo systemctl stop bluetooth-autoconnect
 1414  sudo crontab -h
 1415  sudo crontab -l
 1416  gst-launch-1.0 nvarguscamerasrc sensor_id=0 !    'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=30/1' !    nvvidconv flip-method=0 ! 'video/x-raw,width=960, height=540' !    nvvidconv ! nvegltransform ! nveglglessink -e
 1417  cd ..
 1418  git clone https://github.com/jackersson/gst-python-tutorials.git
 1419  cd gst-python-tutorials/
 1420  ll
 1421  pip install --upgrade wheel pip setuptools
 1422  more requirements.txt 
 1423  pip install --upgrade --requirement requirements.txt
 1424  ll
 1425  cd launch_pipeline/
 1426  ll
 1427  python ./run_appsink.py 
 1428  ll
 1429  python launch_pipeline/pipeline_with_factory.py
 1430  ll
 1431  chmod +x *
 1432  ll
 1433  ./pipeline_with_factory.py 
 1434  ./pipeline_with_parse_launch.py 
 1435  ll /dev/video0 
 1436  sudo usermod -a -G video $LOGNAME
 1437  ./pipeline_with_parse_launch.py 
 1438  ll
 1439  more pipeline_with_factory.py 
 1440  python
 1441  python launch_pipeline/pipeline_with_parse_launch.py -p "videotestsrc num-buffers=100 pattern=1 ! autovideosink"
 1442  ll
 1443  cd ..
 1444  python launch_pipeline/pipeline_with_parse_launch.py -p "videotestsrc num-buffers=100 pattern=1 ! autovideosink"
 1445  clear
 1446  python launch_pipeline/pipeline_with_parse_launch.py -p "nvarguscamerasrc sensor_id=0 ! nvoverlaysink"
 1447  cd projects/
 1448  git clone https://github.com/Heavy02011/50-donkey.git
 1449  cd 50-donkey/
 1450  ll
 1451  cd rbxparts/
 1452  ll
 1453  more demo.py 
 1454  python demo.py 
 1455  source ~/env/bin/activate
 1456  python demo.py 
 1457  python demo_warp2.py 
 1458  pip install matplotlib
 1459  python demo_warp2.py 
 1460  ifconfig
 1461  ping neuron
 1462  ping neuron.local
 1463  ping 192.168.0.192
 1464  scp rainer@192.168.0.192:/home/rainer?Downloads/camera_cal.zip .
 1465  mv ~/camera_cal.zip .
 1466  ll
 1467  unzip camera_cal.zip 
 1468  ll
 1469  cd camera_cal
 1470  rm camera_cal
 1471  ll
 1472  unzip camera_cal.zip 
 1473  ll
 1474  rm camera_cal
 1475  rm camera_cal.zip 
 1476  mv ~/camera_cal.zip .
 1477  unzip camera_cal.zip 
 1478  ll
 1479  cd camera_cal/
 1480  ll
 1481  cd ..
 1482  clear
 1483  python demo_warp2.py 
 1484  python demo_warp.py 
 1485  ll
 1486  python demo_vis.py 
 1487  pip install zmq
 1488  python demo_vis.py 
 1489  ll
 1490  python demo_lane.py 
 1491  python demo_warp2.py 
 1492  python demo.py 
 1493  gst-inspect-1.0 
 1494  gst-inspect-1.0 |grep video
 1495  gst-launch-1.0 nvarguscamerasrc ! video/x-raw(memory:NVMM), width=(int)160, height=(int)120, format=(string)NV12, framerate=(fraction)60/1 ! nvvidconv flip-method=0 ! video/x-raw, width=(int)160, height=(int)120, format=(string)BGRx ! videoconvert ! video/x-raw, format=(string)BGR ! appsink
 1496  gst-launch-1.0 nvarguscamerasrc ! video/x-raw(memory:NVMM), width=(int)160, height=(int)120, format=(string)NV12, framerate=(fraction)60/1 ! nvvidconv flip-method=0 ! video/x-raw, width=(int)160, height=(int)120, format=(string)BGRx ! videoconvert ! video/x-raw, format=(string)BGR ! appsink -e
 1497  gst-launch-1.0 "nvarguscamerasrc ! video/x-raw(memory:NVMM), width=(int)160, height=(int)120, format=(string)NV12, framerate=(fraction)60/1 ! nvvidconv flip-method=0 ! video/x-raw, width=(int)160, height=(int)120, format=(string)BGRx ! videoconvert ! video/x-raw, format=(string)BGR ! appsink"
 1498  gst-launch-1.0 "nvarguscamerasrc ! video/x-raw(memory:NVMM), width=(int)160, height=(int)120, format=(string)NV12, framerate=(fraction)60/1 ! nvvidconv flip-method=0 ! video/x-raw, width=(int)160, height=(int)120, format=(string)BGRx ! videoconvert ! video/x-raw, format=(string)BGR ! appsink -e"
 1499  ll
 1500  more manual_control_rbx.py 
 1501  ll
 1502  python demo_lane.py 
 1503  python demo_lane2.py 
 1504  cd ..
 1505  cd gst-python-tutorials/
 1506  cd launch_pipeline/
 1507  ll
 1508  python pipeline_with_parse_launch.py 
 1509  cd ..
 1510  ll
 1511  cd gst-python-tutorials/
 1512  ll
 1513  cd launch_pipeline/
 1514  LL
 1515  PYTHON 
 1516  ll
 1517  ./pipeline_with_parse_launch.py 
 1518  source ~/env/bin/activate
 1519  ./pipeline_with_parse_launch.py 
 1520  python launch_pipeline/pipeline_with_parse_launch.py -p "nvarguscamerasrc sensor_id=0 ! nvoverlaysink"
 1521  cd ..
 1522  python launch_pipeline/pipeline_with_parse_launch.py -p "nvarguscamerasrc sensor_id=0 ! nvoverlaysink"
 1523  cd launch_pipeline/
 1524  ./pipeline_with_parse_launch.py 
 1525  sudo reboot
 1526  cd projects/
 1527  git clone https://github.com/mad4ms/python-opencv-gstreamer-examples.git
 1528  source ~/env/bin/activate
 1529  cd python-opencv-gstreamer-examples/
 1530  ll
 1531  chmod +x *.py
 1532  ll
 1533  ./gst_intel_device_to_app_to_file.py 
 1534  clear
 1535  python
 1536  cd ..
 1537  cd installDonkeycarJetsonNanoJP46/camera/
 1538  ll
 1539  python cam_cap_cv2_2_gst.py 
 1540  ll
 1541  python cam_cap_cv2_3_gst-raw.py 
 1542  cd /boot
 1543  ll
 1544  ls
 1545  cd dtb
 1546  ls
 1547  ll
 1548  source env/bin/activate
 1549  cd 2
 1550  cd d2
 1551  python manage.py drive
 1552  pip install mpu6050-raspberrypi
 1553  python manage.py drive
 1554  sudo apt install python3-smbus
 1555  source ~/env/bin/activate
 1556  python manage.py drive
 1557  sudo apt install python-smbus
 1558  python manage.py drive
 1559  pip install smbus
 1560  python manage.py drive
 1561  donkey calibrate.py 
 1562  donkey calibrate
 1563  donkey calibrate -h
 1564  donkey calibrate --channel 1 --bus 1
 1565  donkey calibrate --channel 0 --bus 1
 1566  python manage.py drive
 1567  donkey calibrate --channel 1 --bus 1
 1568  python manage.py drive
 1569  donkey calibrate --channel 1 --bus 1
 1570  python manage.py drive
 1571  donkey calibrate --channel 1 --bus 1
 1572  python manage.py drive
 1573  donkey calibrate --channel 1 --bus 1
 1574  python manage.py drive
 1575  donkey calibrate --channel 1 --bus 1
 1576  sudo /opt/nvidia/jetson-io/jetson-io.py
 1577  sudo /opt/nvidia/jetson-io/jetson-io.py>ttt
 1578  more ttt
 1579  sudo /opt/nvidia/jetson-io/jetson-io.py>ttt
 1580  sudo /opt/nvidia/jetson-io/jetson-io.py
 1581  sudo cd /opt/nvidia/jetson-io/
 1582  sudo cd /opt/nvidia/jetson-io
 1583  sudo cd/opt/nvidia/jetson-io
 1584  sudo cd /opt/nvidia/jetson-io
 1585  cd /opt/nvidia/jetson-io
 1586  ll
 1587  ./config-by-hardware.py 
 1588  ./config-by-hardware.py --list
 1589  sudo ./config-by-hardware.py --list
 1590  cd Jetson/
 1591  ll
 1592  sudo vi board.py 
 1593  sudo /opt/nvidia/jetson-io/jetson-io.py
 1594  cd /boot/
 1595  cd dtb/
 1596  ll
 1597  more *.dtb
 1598  cd ..
 1599  ll tegra210*
 1600  ll *user*
 1601  source env/bin/activate
 1602  cd d2
 1603  history 
 1604  donkey calibrate --channel 1 --bus 1
 1605  donkey calibrate --channel 0 --bus 1
 1606  python manage.py drive
 1607  donkey calibrate --channel 1 --bus 1
 1608  history 
 1609  sudo /opt/nvidia/jetson-io/jetson-io.py
 1610  cd /opt/nvidia/jetson-io/
 1611  cd Jetson/
 1612  ll
 1613  sudo board.py
 1614  sudo vi board.py
 1615  cd ..
 1616  cd Jetson/
 1617  sudo vi board.py
 1618  cd ..
 1619  sudo /opt/nvidia/jetson-io/jetson-io.py
 1620  cd Jetson/
 1621  sudo vi board.py 
 1622  sudo /opt/nvidia/jetson-io/jetson-io.py
 1623  sudo vi board.py 
 1624  sudo /opt/nvidia/jetson-io/jetson-io.py
 1625  sudo reboot
 1626  history
 1627  sudo /opt/nvidia/jetson-io/jetson-io.py
 1628  cd /boot
 1629  ll
 1630  sudo mv tegra210-p3448-0000-p3449-0000-a02-user-custom.dtb
 1631  sudo mv tegra210-p3448-0000-p3449-0000-a02-user-custom.dtb dtb
 1632  cd dtb
 1633  ll
 1634  sudo /opt/nvidia/jetson-io/jetson-io.py
 1635  cd
 1636  mkdir sandbox
 1637  cd sandbox/
 1638  git ​clone​ https://github.com/f1tenth/f1tenth_system
 1639  git clone https://github.com/f1tenth/f1tenth_system.git
 1640  mkdir -p f1tenth_ws/src
 1641  cp -r f1tenth_system f1tenth_ws/src/
 1642  sudo apt-get update
 1643  sudo apt-get install ros-melodic-driver-base
 1644  ​cd​ f1tenth_ws
 1645  ll
 1646  cd f1tenth_ws/
 1647  find . -name “*.py” -exec chmod +x {} \;
 1648  catkin_make
 1649  . ~/.bashrc
 1650  catkin_make
 1651  catkin_make_isolated
 1652  source devel/setup.bash
 1653  catkin_make
 1654  rviz
 1655  cd
 1656  vi .bashrc
 1657  rviz
 1658  rqt
 1659  rviz
 1660  lsusb
 1661  sudo ​udevadm info --name=/dev/ttyUSB0 --attribute-walk
 1662  ll /dev/tty*
 1663  sudo vi /etc/udev/rules.d/99-hokuyo.rules
 1664  sudo vi /etc/udev/rules.d/99-joypad-f710.rules
 1665  sudo ​udevadm control --reload-rules
 1666  sudo apt-get install udev
 1667  sudo ​udevadm control --reload-rules
 1668  systemctl |grep udev
 1669  systemctl start org.cups.cupsd.service
 1670  udevadm monitor
 1671  sudo ​udevadm control --reload-rules
 1672  udevadm control --reload-rules
 1673  su udevadm control --reload-rules
 1674  sudo udevadm control --reload-rules
 1675  sudo udevadm trigger​
 1676  udevadm trigger​
 1677  sudo udevadm trigger
 1678  ls /dev/sensors
 1679  sudo ls /dev/sensors
 1680  ls /dev/input
 1681  sudo reboot
 1682  cd projects/
 1683  ll;
 1684  cd myAutoware/
 1685  git status
 1686  cd
 1687  git clone https://github.com/jetsonhacks/installROS.git
 1688  cd installROS/
 1689  cd
 1690  mv installROS/ projects/
 1691  cd projects/
 1692  cd installROS/
 1693  ll
 1694  more ./installROS.sh 
 1695  ./installROS.sh ros-melodic-desktop-full
 1696  ./installROS.sh -p ros-melodic-desktop-full
 1697  ifconfig
 1698  cd
 1699  cd . .bashrc
 1700  rviz
 1701  vi .bashrc
 1702  docker pull f1tenth/focal-l4t-foxy:f1tenth-stack
 1703  docker run -it f1tenth/focal-l4t-foxy:f1tenth-stack bash
 1704  sudo docker run -it f1tenth/focal-l4t-foxy:f1tenth-stack bash
 1705  sudo docker pull donkeycar-jetson:overdrive4
 1706  docker login
 1707  docker pull donkeycar-jetson:overdrive4
 1708  sudo docker pull donkeycar-jetson:overdrive4
 1709  docker status
 1710  See 'docker --help'
 1711  docker pull naisy/donkeycar-jetson:overdrive4
 1712  ll
 1713  ./run-donkeycar-jetson.sh 
 1714  df -m /
 1715  rviz
 1716  ls /dev/sensors
 1717  ls /dev/input
 1718  cd /etc/udev/rules.d/
 1719  ll
 1720  sudo ​udevadm info --name=/dev/ttyUSB0 --attribute-walk
 1721  sudo udevadm info --name/dev/ttyUSB0 --attribute-walk
 1722  sudo udevadm info --name=/dev/ttyUSB0 --attribute-walk
 1723  cd
 1724  vi run-donkeycar-jetson.sh
 1725  chmod +x run-donkeycar-jetson.sh 
 1726  docker ps
 1727  docker exec -it awesome_carson bash
 1728  docker ps
 1729  docker stop awesome_carson 
 1730  cd docker-files
 1731  ll
 1732  vi run-donkeycar-jetson2.sh 
 1733  ./run-donkeycar-jetson2.sh 
 1734  chmod +x run-donkeycar-jetson2.sh 
 1735  ./run-donkeycar-jetson2.sh 
 1736  vi run-donkeycar-jetson2.sh 
 1737  ./run-donkeycar-jetson2.sh 
 1738  ll
 1739  ./run-f1tenth-jetson.sh 
 1740  docker run -it f1tenth/focal-l4t-foxy:f1tenth-stack
 1741  docker run -it f1tenth/focal-l4t-foxy:f1tenth-stack bash
 1742  docker start f1tenth/focal-l4t-foxy:f1tenth-stack
 1743  docker run f1tenth/focal-l4t-foxy:f1tenth-stack
 1744  docker images
 1745  docker exec -it 30723231e299 bash
 1746  docker run 30723231e299 bash
 1747  docker run 30723231e299
 1748  docker start 30723231e299
 1749  docker run f1tenth/focal-l4t-foxy
 1750  docker run f1tenth/focal-l4t-foxy:f1tenth-stack
 1751  docker run -it --rm -p 6080:80 madhurbehl/f1tenth
 1752  docker pull f1tenth/focal-l4t-foxy
 1753  docker pull f1tenth/focal-l4t-foxy:f1tenth-stack
 1754  docker run f1tenth/focal-l4t-foxy:f1tenth-stack
 1755  docker run -it f1tenth/focal-l4t-foxy:f1tenth-stack bash
 1756  docker run -it f1tenth/focal-l4t-foxy:v0.1 bash
 1757  docker images
 1758  rviz
 1759  roscore
 1760  history
 1761  cd projects/
 1762  cd
 1763  mkdir docker-files
 1764  cd docker-files/
 1765  ll
 1766  docker ps
 1767  docker cp awesome_carson:d2 .
 1768  docker cp awesome_carson:~/d2 .
 1769  docker cp awesome_carson:/home/jetson/d2 .
 1770  ll
 1771  cd d2
 1772  ll
 1773  cd
 1774  mv run-donkeycar-jetson.sh docker-files/
 1775  cd docker-files/
 1776  vi run-donkeycar-jetson.sh 
 1777  vi run-donkeycar-jetson2.sh 
 1778  jtop
 1779  docker images
 1780  cd ..
 1781  cd projects/
 1782  cd myAutoware/
 1783  ll
 1784  ln -s /home/rainer/docker-files/ .
 1785  ll
 1786  git status
 1787  git add docker-files
 1788  git commit -m"docker-files naisy added"
 1789  git push
 1790  mv ~/docker-files/ .
 1791  ll
 1792  rm docker-files
 1793  mv ~/docker-files/ .
 1794  ll
 1795  cd
 1796  cd projects/myAutoware/
 1797  ln -s docker-files/ /home/rainer/
 1798  cd
 1799  ll
 1800  cd doc
 1801  cd docker-files
 1802  rm docker-files 
 1803  ll
 1804  ln -s projects/myAutoware/docker-files/ .
 1805  ll
 1806  cd docker-files
 1807  ll
 1808  cd
 1809  cd projects/
 1810  cd myAutoware/
 1811  git status
 1812  git add *
 1813  git commit -m"docker-files naisy added"
 1814  git push
 1815  git status
 1816  git add README.md 
 1817  git commit -m"feat: README updated for docker naisy"
 1818  git push
 1819  docker images
 1820  git status
 1821  git add *
 1822  git commit -m"feat update imu"
 1823  git push
 1824  docker images
 1825  git status
 1826  git add *
 1827  git commit -m"feat: f1tenth added NOT working"
 1828  git push
 1829  docker ps
 1830  docker save awesome_carson > naisey-docker1.tar
 1831  docker commit awesome_carson diyrobocars:naisy
 1832  docker images
 1833  docker push diyrobocars:naisy
 1834  docker commit awesome_carson heavy02011:naisy-donkeycar
 1835  docker images
 1836  docker push heavy02011/naisy-donkeycar
 1837  docker push heavy02011:naisy-donkeycar
 1838  docker login
 1839  docker push heavy02011:naisy-donkeycar
 1840  sudo docker push heavy02011:naisy-donkeycar
 1841  docker ps
 1842  sudo docker push heavy02011/awesome_carson
 1843  docker ps
 1844  docker images
 1845  sudo docker push heavy02011:naisy-donkeycar
 1846  docker login
 1847  sudo docker push heavy02011:naisy-donkeycar
 1848  sudo docker push heavy02011/naisy-donkeycar
 1849  sudo docker push heavy02011/naisy-donkeycar:0.1
 1850  docker ps
 1851  docker images
 1852  docker tag e14e6fc7902b heavy02011/naisy-donkeycar:0.1
 1853  sudo docker push heavy02011/naisy-donkeycar:0.1
 1854  docker ps
 1855  docker images
 1856  docker login
 1857  docker push heavy02011/naisy-donkeycar:0.1
 1858  cd
 1859  history 
 1860  donkey calibrate --channel 1 --bus 1
 1861  source env/bin/a
 1862  source env/bin/activate
 1863  donkey calibrate --channel 1 --bus 1
 1864  cd d2
 1865  python manage.py drive
 1866  donkey calibrate --channel 1 --bus 1
 1867  donkey calibrate --channel 0 --bus 1
 1868  python manage.py drive
 1869  donkey calibrate --channel 0 --bus 1
 1870  donkey calibrate --channel 1 --bus 1
 1871  python manage.py drive
 1872  cd docker-files
 1873  ll
 1874  ./run-donkeycar-jetson2.sh 
 1875  mkdir projects
 1876  ./run-donkeycar-jetson2.sh 
 1877  docker ps
 1878  ./run-donkeycar-jetson2.sh 
 1879  docker ps
 1880  docker images
 1881  pip uninstall pigpio
 1882  sudo /opt/nvidia/jetson-io/jetson-io.py
 1883  cd /opt/nvidia/jetson-io/
 1884  ll
 1885  cd Jetson/
 1886  ll
 1887  sudo vi board.py 
 1888  sudo /opt/nvidia/jetson-io/jetson-io.py
 1889  sudo reboot
 1890  cd projects/myAutoware/
 1891  git pull
 1892  source ~/env/bin/activate
 1893  cd
 1894  cd d2
 1895  python manage.py drive
 1896  history 
 1897  donkey calibrate --channel 1 --bus 1
 1898  python manage.py drive
 1899  donkey calibrate --channel 1 --bus 1
 1900  pip list 
 1901  pip list |grep io
 1902  pip uninstall pigpio
 1903  d
 1904  python manage.py drive
 1905  cd
 1906  cd projects/myAutoware/
 1907  ll
 1908  cd docker-files/
 1909  ll
 1910  cd projects_local/
 1911  ll
 1912  cd ..
 1913  ll
 1914  more ./run-donkeycar-jetson2.sh 
 1915  vi ./run-donkeycar-jetson2.sh 
 1916  sudo /opt/nvidia/jetson-io/jetson-io.py
 1917  source env/bin/activate
 1918  cd d2
 1919  python manage.py drive
 1920  sudo apt-get install joystick
 1921  sudo jstest /dev/input/js0
 1922  history 
 1923  donkey calibrate --channel 1 --bus 1
 1924  sudo jstest /dev/input/js0
 1925  dopnkey creatjs
 1926  donkey
 1927  donkey createjs
 1928  ll
 1929  python manage.py drive
 1930  env|DISPLAY
 1931  env|grep DISPLAY
 1932  cd ..
 1933  git pull
 1934  cd docker-files/
 1935  ll
 1936  ./run-f1tenth-jetson.sh 
 1937  more run-f1tenth-jetson.sh 
 1938  docker run --it f1tenth/focal-l4t-foxy:f1tenth-stack bash
 1939  docker run -it f1tenth/focal-l4t-foxy:f1tenth-stack bash
 1940  docker run f1tenth/focal-l4t-foxy:f1tenth-stack
 1941  sudo docker run f1tenth/focal-l4t-foxy:f1tenth-stack
 1942  docker run --runtime nvidia -it f1tenth/focal-l4t-foxy:f1tenth-stack bash
 1943  docker -v
 1944  sudo apt install containerd=1.5.2-0ubuntu1~18.04.3
 1945  sudo apt install ./docker.io_19.03.6-0ubuntu1_18.04.3_arm64.deb
 1946  distribution=$(. /etc/os-release;echo $ID$VERSION_ID)    && curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -    && curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
 1947  sudo apt-get update
 1948  sudo apt-get install nvidia-docker2=2.8.0-1
 1949  docker -v
 1950  history 
 1951  docker run --runtime nvidia -it f1tenth/focal-l4t-foxy:f1tenth-stack bash
 1952  ./run-f1tenth-jetson.sh 
 1953  cd Downloads/
 1954  ll
 1955  sudo apt-get install ./discord-0.0.18.deb 
 1956  cd
 1957  cd projects/donkeycar/
 1958  git branch
 1959  cd
 1960  cd d2
 1961  ll
 1962  more my_joystick.py 
 1963  donkey creatjs
 1964  cd 
 1965  cd docker-files
 1966  ll
 1967  ./run-donkeycar-jetson2.sh 
 1968  source env/bin/activate
 1969  cd d2
 1970  donkey creatjs
 1971  donkey createjs
 1972  more my_joystick.py 
 1973  python manage.py drive
 1974  more my_joystick.py 
 1975  python manage.py drive
 1976  cd
 1977  cd projects/
 1978  cd do
 1979  cd donkeycar/
 1980  git checkout main
 1981  pip install -e .
 1982  donkey
 1983  cd
 1984  cd d2
 1985  python manage.py drive
 1986  history 
 1987  donkey calibrate --channel 1 --bus 1
 1988  python manage.py drive
 1989  donkey calibrate --channel 1 --bus 1
 1990  cd
 1991  cd projects/
 1992  cd myAutoware/
 1993  git status 
 1994  git add *
 1995  git commit -m"feat: f1tenth docker fixed"
 1996  git push
 1997  cd projects/
 1998  cde myAutoware/
 1999  cd myAutoware/
 2000  git pull
 2001  cd pwm-joystick/
 2002  ll
 2003  python joydrive-pwm.py 
 2004  source ~/env/bin/activate
 2005  python joydrive-pwm.py 
 2006  history 
 2007  donkey calibrate --channel 1 --bus 1
 2008  python joydrive-pwm.py 
 2009  donkey calibrate --channel 1 --bus 1
 2010  python joydrive-pwm.py 
 2011  370
 2012  python joydrive-pwm.py 
 2013  git status
 2014  cd ..
 2015  git status
 2016  git add pwm-joystick/
 2017  git commit -m"feat: jowdrive-pwm.py prtotype added"
 2018  git push
 2019  sudo usermod -aG i2c $USER
 2020  sudo i2cdetect -r -y 1
 2021  sudo /opt/nvidia/jetson-io/jetson-io.py
 2022  cd
 2023  cd docker-files
 2024  ll
 2025  ./run-donkeycar-jetson2.sh 
 2026  source env/bin/activate
 2027  cd d2
 2028  ll
 2029  history 
 2030  ~1086
 2031  donkey calibrate --channel 1 --bus 1
 2032  donkey calibrate --channel 0 --bus 1
 2033  pyhtnon manage.py drive
 2034  pyhton manage.py drive
 2035  python manage.py drive
 2036  cd
 2037  cd docker-files
 2038  ll
 2039  ./run-donkeycar-jetson2.sh 
 2040  jtop
 2041  cd
 2042  cd d2
 2043  python manage.py drive
 2044  sudo /opt/nvidia/jetson-io/jetson-io.py
 2045  cd /boot
 2046  ll
 2047  cd dtb
 2048  ll
 2049  sudo mkdir old
 2050  ll
 2051  sudo mv tegra210-p3448-0000-p3449-0000-a02-user-custom.dtb old
 2052  ll
 2053  cxd ..
 2054  cd ..
 2055  ll
 2056  sudo mv tegra210-p3448-0000-p3449-0000-a02-user-custom-user-custom.dtb dtb/old/
 2057  sudo /opt/nvidia/jetson-io/jetson-io.py
 2058  sudo reboot
 2059  cd 
 2060  cd docker-files
 2061  ll
 2062  ./run-donkeycar-jetson2.sh 
 2063  source env/bin/activate
 2064  cd d2
 2065  python manage.py driver
 2066  python manage.py drive
 2067  gst-launch-1.0 nvarguscamerasrc sensor_id=0 !    'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=30/1' !    nvvidconv flip-method=0 ! 'video/x-raw,width=960, height=540' !    nvvidconv ! nvegltransform ! nveglglessink -e
 2068  ll
 2069  source env/bin/activate
 2070  cd d2
 2071  python manage.py drive
 2072  sudo reboot
 2073  cd 
 2074  cd projects/myAutoware/
 2075  git status
 2076  git add *
 2077  git commit -m "feat: aftyer fixing hardware PWN-issue"
 2078  git push
 2079  ifconfig
 2080  cd
 2081  cd
 2082  cd docker-files
 2083  ll
 2084  ./run-donkeycar-jetson2.sh 
 2085  sudo /opt/nvidia/jetson-io/jetson-io.py
 2086  source env/bin/activate
 2087  cd d2
 2088  python manage.py drive
 2089  cd
 2090  cd projects/
 2091  cd donkeycar/
 2092  cd donkeycar
 2093  cd parts/
 2094  python lidar.py 
 2095  sudo reboot
 2096  source env/bin/activate
 2097  cd projects/myAutoware/
 2098  git pull
 2099  cd ..
 2100  cd installDonkeycarJetsonNanoJP46/
 2101  git pull
 2102  git status
 2103  git add camera/
 2104  git commit -mcamera added"
 2105  git commit -m"feat: camera added"
 2106  git push
 2107  cd ..
 2108  cd /etc/NetworkManager/system-connections/
 2109  ll
 2110  more Hotspot 
 2111  sudo more Hotspot 
 2112  nmcli c down Hotspot
 2113  sudo mv Hotspot ~
 2114  sudo cp ~/rbnano1-drivingnetwork .
 2115  ll
 2116  nmcli c up rbnano1-drivingnetwork
 2117  sudo reboot
 2118  vi .bashrc
 2119  .. .bashrc
 2120  . .bashrc
 2121  cd d2
 2122  python manage.py drive
 2123  sudo halt
 2124  cd projects/
 2125  git clone https://github.com/lakinduakash/linux-wifi-hotspotgit clone https://github.com/lakinduakash/linux-wifi-hotspot
 2126  git clone https://github.com/lakinduakash/linux-wifi-hotspot
 2127  cd linux-wifi-hotspot
 2128  make
 2129  ll
 2130  make config
 2131  ./cofigure
 2132  ./configure
 2133  make
 2134  sudo add-apt-repository ppa:lakinduakash/lwh
 2135  sudo apt install linux-wifi-hotspot
 2136  sudo apt-get upgrade
 2137  sudo apt-get update
 2138  sudo apt install linux-wifi-hotspot
 2139  sudo apt install -y libgtk-3-dev build-essential gcc g++ pkg-config make hostapd libqrencode-dev libpng-dev
 2140  git pull
 2141  make
 2142  sudo make install
 2143  wihotspot
 2144  jtop
 2145  history 
 2146  source env/bin/activate
 2147  nmcli c up rbnano1-drivingnetwork
 2148  cd /etc/NetworkManager/system-connections/\
 2149  ll
 2150  nmcli c up rbnano1-drivingnetwork
 2151  sudo vi rbnano1-drivingnetwork 
 2152  sudo mv ~/Hotspot .
 2153  nmcli c up Hotspot
 2154  ll
 2155  nmcli dev show wlan0
 2156  nmcli dev show wlan1
 2157  more rbnano1-drivingnetwork 
 2158  nmcli radio wifi on
 2159  nmcli dev wifi list
 2160  nmcli con show
 2161  systemctl disable dnsmasq
 2162  systemctl stop dnsmasq
 2163  systemctl NetworkManager restart
 2164  mac-address-blacklist=
 2165  nmcli con show
 2166  systemctl -h
 2167  systemctl list-units
 2168  systemctl list-units|grep network
 2169  systemctl networking.service restart
 2170  cd
 2171  vci rbnano1-drivingnetwork 
 2172  vi rbnano1-drivingnetwork 
 2173  sudo create_ap wlan0 eth0 'rbnano1-drivingnetwork' 'rbnano1-drivingnetwork' --freq-band 2.4 --no-virt -w 2
 2174  sudo apt install -y libgtk-3-dev build-essential gcc g++ pkg-config make hostapd
 2175  more rbnano1-drivingnetwork 
 2176  systemctl enable create_ap
 2177  vi .bashrc
 2178  cd projects/
 2179  cd myAutoware/
 2180  git status
 2181  git pull
 2182  cd d2
 2183  cat myconfig.py | grep RP
 2184  vi myconfig.py 
 2185  pytho manage.py drive
 2186  python manage.py drive
 2187  pytho manage.py drive
 2188  vi myconfig.py 
 2189  python manage.py drive
 2190  cd
 2191  cd projects/
 2192  cd donkeycar/
 2193  cd donkeycar
 2194  cd parts/
 2195  vi lidar.py 
 2196  cd
 2197  cd d2
 2198  python manage.py drive
 2199  cd data/
 2200  ll
 2201  cd ..
 2202  python manage.py drive
 2203  vi manage.py .
 2204  vi manage.py 
 2205  cd 
 2206  cd projects/donkeycar/donkeycar/parts/
 2207  vi actuator.py 
 2208  cd
 2209  cd d2
 2210  history 
 2211  python manage.py drive
 2212  cd projects/donkeycar/donkeycar/parts/
 2213  cd
 2214  cd projects/donkeycar/donkeycar/parts/
 2215  vi actuator.py 
 2216  cd
 2217  cd d2
 2218  history 
 2219  python manage.py drive
 2220  cd
 2221  cd projects/donkeycar/donkeycar/parts/
 2222  vi actuator.py 
 2223  cd
 2224  cd d2
 2225  python manage.py drive
 2226  cd data
 2227  ll
 2228  time
 2229  date
 2230  cd tub_15_22-06-19/
 2231  ll
 2232  more catalog_0.catalog
 2233  ll
 2234  cd
 2235  cd projects/
 2236  ll
 2237  cd myAutoware/
 2238  ll
 2239  cd lidar/
 2240  ll
 2241  python display-lidar.py 
 2242  ll
 2243  python stream_scans.py 
 2244  ll
 2245  cd ..
 2246  cd donkeycar/donkeycar/parts/
 2247  python lidar.py 
 2248  sudo halt
 2249  cd
 2250  cd projects/donkeycar/donkeycar/parts/
 2251  python lidar.py 
 2252  cd
 2253  source env/bin/deactivate.nu 
 2254  source env/bin/deactivate
 2255  source env/bin/deactivate.nu 
 2256  cd docker-files
 2257  cd d2
 2258  ll
 2259  cd ..
 2260  ll
 2261  ./run-donkeycar-jetson2.sh 
 2262  ./run-donkeycar-jetson3.sh 
 2263  chmod +x run-*
 2264  ll
 2265  ./run-donkeycar-jetson3.sh 
 2266  more run-donkeycar-jetson3.sh 
 2267  more run-donkeycar-jetson2.sh 
 2268  run-donkeycar-jetson2.sh 
 2269  ./run-donkeycar-jetson2.sh 
 2270  ./run-donkeycar-jetson3.sh 
 2271  docker ps
 2272  cd d2
 2273  python manage.py drive
 2274  cd
 2275  cd d2
 2276  python manage.py drive
 2277  sudo halt
 2278  cd
 2279  cd d2
 2280  python manage.py drive
 2281  cd
 2282  cd projects/
 2283  cd CSI-Camera/
 2284  gst-launch-1.0 nvarguscamerasrc sensor_id=0 ! nvoverlaysink
 2285  gst-launch-1.0 nvarguscamerasrc sensor_id=0 ! nvoverlaysink
 2286  gst-launch-1.0 nvarguscamerasrc sensor_id=0 !    'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=30/1' !    nvvidconv flip-method=0 ! 'video/x-raw,width=960, height=540' !    nvvidconv ! nvegltransform ! nveglglessink -e
 2287  sudo apt uninstall libopencv-dev=3.2.0+dfsg-4ubuntu0.1
 2288  sudo apt remove libopencv-dev=3.2.0+dfsg-4ubuntu0.1
 2289  gst-launch-1.0 nvarguscamerasrc sensor_id=0 !    'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=30/1' !    nvvidconv flip-method=0 ! 'video/x-raw,width=960, height=540' !    nvvidconv ! nvegltransform ! nveglglessink -e
 2290  sudo apt-get install libopencv-dev
 2291  python
 2292  gst-launch-1.0 nvarguscamerasrc sensor_id=0 !    'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=30/1' !    nvvidconv flip-method=0 ! 'video/x-raw,width=960, height=540' !    nvvidconv ! nvegltransform ! nveglglessink -e
 2293  gst-launch-1.0 nvarguscamerasrc sensor_id=0 ! nvoverlaysink
 2294  ./simple_camera.py 
 2295  ./simple_camera
 2296  ll
 2297  gst-launch-1.0 nvarguscamerasrc sensor_id=0 !    'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=30/1' !    nvvidconv flip-method=0 ! 'video/x-raw,width=960, height=540' !    nvvidconv ! nvegltransform ! nveglglessink -e
 2298  cd d2
 2299  history 
 2300  python manage.py drive
 2301  cd
 2302  cd projects/
 2303  cd CSI-Camera/
 2304  ll
 2305  git pull
 2306  ./simple_camera.py 
 2307  gst-launch-1.0 nvarguscamerasrc sensor_id=0 !    'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=30/1' !    nvvidconv flip-method=0 ! 'video/x-raw,width=960, height=540' !    nvvidconv ! nvegltransform ! nveglglessink -e
 2308  gst-launch-1.0 nvarguscamerasrc sensor_id=0 ! nvoverlaysink
 2309  python simple_camera.py 
 2310  $ v4l2-ctl --list-formats-ext
 2311  ioctl: VIDIOC_ENUM_FMT
 2312  Index       : 0
 2313  Type        : Video Capture
 2314  Pixel Format: 'RG10'
 2315  Name        : 10-bit Bayer RGRG/GBGB
 2316  Size: Discrete 3280x2464
 2317  Interval: Discrete 0.048s (21.000 fps)
 2318  Size: Discrete 3280x1848
 2319  Interval: Discrete 0.036s (28.000 fps)
 2320  Size: Discrete 1920x1080
 2321  Interval: Discrete 0.033s (30.000 fps)
 2322  Size: Discrete 1280x720
 2323  Interval: Discrete 0.017s (60.000 fps)
 2324  Size: Discrete 1280x720
 2325  Interval: Discrete 0.017s (60.000 fps)$ v4l2-ctl --list-formats-ext
 2326  ioctl: VIDIOC_ENUM_FMT
 2327  Index       : 0
 2328  Type        : Video Capture
 2329  Pixel Format: 'RG10'
 2330  Name        : 10-bit Bayer RGRG/GBGB
 2331  Size: Discrete 3280x2464
 2332  Interval: Discrete 0.048s (21.000 fps)
 2333  Size: Discrete 3280x1848
 2334  Interval: Discrete 0.036s (28.000 fps)
 2335  Size: Discrete 1920x1080
 2336  Interval: Discrete 0.033s (30.000 fps)
 2337  Size: Discrete 1280x720
 2338  Interval: Discrete 0.017s (60.000 fps)
 2339  Size: Discrete 1280x720
 2340  Interval: Discrete 0.017s (60.000 fps)
 2341  $ v4l2-ctl --list-formats-ext
 2342  v4l2-ctl --list-formats-ext
 2343  sudo apt-get install v4l-utils
 2344  v4l2-ctl --list-formats-ext
 2345  pythoncv2.__version__
 2346  cv2.__version__
 2347  python
 2348  g++ -std=c++11 -Wall -I/usr/lib/opencv -I/usr/include/opencv4 simple_camera.cpp -L/usr/lib -lopencv_core -lopencv_highgui -lopencv_videoio -o simple_camera
 2349  ll
 2350  ./simple_camera
 2351  cd
 2352  more .bashrc\
 2353  sudo rosdep init
 2354  rosdep update
 2355  ll
 2356  cd cat
 2357  cd sandbox/
 2358  ll
 2359  cd
 2360  mkdir -p ~/catkin_ws/src
 2361  cd ~/catkin_ws/src
 2362  git clone https://github.com/CopterExpress/clover
 2363  git clone https://github.com/CopterExpress/ros_led
 2364  git clone https://github.com/okalachev/vl53l1x_ros
 2365  ll
 2366  cd ..
 2367  rosdep install --from-paths src --ignore-src -y
 2368  curl https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh -o install_geographiclib_datasets.sh
 2369  ll
 2370  chmod a+x ./install_geographiclib_datasets.sh
 2371  ll
 2372  more install_geographiclib_datasets.sh 
 2373  sudo ./install_geographiclib_datasets.sh
 2374  catkin_make
 2375  python
 2376  sudo apt install libopencv-dev=3.2.0+dfsg-4ubuntu0.1
 2377  catkin__make
 2378  ll
 2379  catkin_maked
 2380  catkin_make
 2381  ll
 2382  ./install_geographiclib_datasets.sh 
 2383  sudo ./install_geographiclib_datasets.sh 
 2384  python
 2385  more install_geographiclib_datasets.sh 
 2386  curl https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh -o install_geographiclib_datasets.sh
 2387  ll
 2388  sudo ./install_geographiclib_datasets.sh
 2389  cd d2
 2390  ll
 2391  python manage.py drive
 2392  cd data
 2393  ll
 2394  cd tub_1_22-06-26/
 2395  more catalog_0.catalog
 2396  ll
 2397  cd ima
 2398  cd images/
 2399  ll
 2400  exit
 2401  python manage.py drive
 2402  cd d2
 2403  python manage.py drive
 2404  ll
 2405  more readme.md 
 2406  dmesg | grep tty
 2407  sudo chmod 666 /dev/ttyUSB0
 2408  ll /dev/ttyUSB0
 2409  more readme.md 
 2410  ll
 2411  chmod +x iViewer 
 2412  ll
 2413  ./iViewer 
 2414  ./iViewer
 2415  cd ..
 2416  cd src
 2417  git clone https://github.com/tu-darmstadt-ros-pkg/hector_slam.git
 2418  cd ~/catkin_ws/src/hector_slam/hector_mapping/launch/mapping_default.launch
 2419  cd ~/catkin_ws/src/hector_slam/hector_mapping/launch/
 2420  cd ~/catkin_ws2/src/hector_slam/hector_mapping/launch/
 2421  ll
 2422  vi mapping_default.launch 
 2423  cd ..
 2424  cd hector_slam_launch/
 2425  ll
 2426  cd launch/
 2427  ll
 2428  vi tutorial.launch 
 2429  cd ..
 2430  catkin_build
 2431  catkin build
 2432  source devel/setup.bash
 2433  catkin build
 2434  catkin_build
 2435  catkin_make
 2436  cd /usr/include
 2437  sudo ln -s opencv4/ opencv
 2438  roslaunch rplidar_ros rplidar.launch
 2439  catkin_make
 2440  cd
 2441  cd catkin_ws2
 2442  catkin_make
 2443  source devel/setup.bash 
 2444  roslaunch rplidar_ros rplidar.launch
 2445  source devel/setup.bash 
 2446  rostopic pub syscommand std_msgs/String "savegeotiff"
 2447  ll
 2448  cd src/
 2449  ll
 2450  cd hector_slam/
 2451  ll
 2452  cd hector_geotiff
 2453  ll
 2454  cd maps/
 2455  ll
 2456  more hector_slam_map_13\:45\:27.tfw 
 2457  rostopic pub syscommand std_msgs/String "savegeotiff"
 2458  ll
 2459  more hector_slam_map_13:53:44.tfw
 2460  rostopic echo /scan
 2461  rviz
 2462  source devel/setup.bash
 2463  rviz
 2464  rviz2
 2465  rviz
 2466  rqt
 2467  cd
 2468  vi .bashrc
 2469  cd catkin_ws2
 2470  source devel/setup.bash 
 2471  rviz
 2472  roscore
 2473  rviz
 2474  which rviz
 2475  source devel/setup.bash
 2476  roslaunch rplidar_ros rplidar.launch
 2477  roslaunch hector_slam_launch tutorial.launch
 2478  clear
 2479  source devel/setup.bash 
 2480  roslaunch hector_slam_launch tutorial.launch
 2481  ll
 2482  cd projects/
 2483  ll
 2484  cd myAutoware/
 2485  git pull
 2486  cd ..
 2487  git clone https://github.com/connected-autonomous-mobility/donkeycar-breezy-slam.git
 2488  ll
 2489  cd donkeycar-breezy-slam/
 2490  ll
 2491  gst-launch-1.0 nvarguscamerasrc sensor_id=0 !    'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=30/1' !    nvvidconv flip-method=0 ! 'video/x-raw,width=960, height=540' !    nvvidconv ! nvegltransform ! nveglglessink -e
 2492  python
 2493  touch test_donkecar_lidar.sh
 2494  chmod +x test_donkecar_lidar.sh 
 2495  ~/projects/donkeycar/donkeycar/parts/lidar.py
 2496  .~/projects/donkeycar/donkeycar/parts/lidar.py
 2497  python ~/projects/donkeycar/donkeycar/parts/lidar.py
 2498  ll
 2499  ./test_donkecar_lidar.sh 
 2500  touch test_breezy1.py
 2501  ll
 2502  chmod +x test_breezy1.py 
 2503  ll
 2504  ./test_breezy1.py 
 2505  python test_breezy1.py 
 2506  mkdir mydata
 2507  python test_breezy1.py 
 2508  ll
 2509  python test_breezy1.py 
 2510  . ~/.bashrc
 2511  python test_breezy1.py 
 2512  pip install breezyslam
 2513  ll
 2514  chmod +x test_webcam1.py 
 2515  ll
 2516  python test_breezy1.py 
 2517  git status
 2518  vi .gitignore 
 2519  git status 
 2520  vi .gitignore 
 2521  git status 
 2522  git add *
 2523  git commit -m"test scripts added"
 2524  git push
 2525  ll
 2526  sudo reboot
 2527  cd /usr/local/lib/python3.6/dist-packages/
 2528  ll
 2529  cd breezyslam/
 2530  ll
 2531  cd ..
 2532  ll
 2533  cd
 2534  vi .bashrc
 2535  . .bashrc
 2536  cd catkin_ws/
 2537  ll
 2538  cd src/
 2539  ll
 2540  git clone  https://github.com/Slamtec/rplidar_ros.git
 2541  cd ..
 2542  catkin_make
 2543  cd ..
 2544  mkdir -p ~/catkin_ws2/src
 2545  cd catkin_ws2
 2546  cd src
 2547  git clone  https://github.com/Slamtec/rplidar_ros.git
 2548  cd ..
 2549  catkin_make
 2550  source devel/setup.bash
 2551  roslaunch rplidar_ros rplidar.launch
 2552  rviz
 2553  rviz2
 2554  ros2
 2555  cd ..
 2556  ll
 2557  cd projects/
 2558  ll
 2559  cd installROS/
 2560  ll
 2561  more installROS.sh 
 2562  more installROS.sh -h
 2563  ./installROS.sh -h
 2564  ./installROS.sh -p ros-melodic-desktop-full
 2565  rviz
 2566  clear
 2567  git clone https://github.com/simondlevy/BreezySLAM.git
 2568  cd BreezySLAM/
 2569  ll
 2570  sudo python3 setup.py install
 2571  lll
 2572  ll
 2573  cd python/
 2574  ll
 2575  sudo python3 setup.py install
 2576  make pytest
 2577  cd ..
 2578  cd examples/
 2579  make pytest
 2580  LL
 2581  ll
 2582  make
 2583  cd ..
 2584  cd python
 2585  ll
 2586  pip install -e .
 2587  sudo python3 setup.py install
 2588  cd ..
 2589  cd examples/
 2590  ll
 2591  make pytest
 2592  more log2pgm.py 
 2593  ll
 2594  make movie
 2595  . ~/.bashrc
 2596  make pytest
 2597  pydoc3 breezyslam
 2598  cd ..
 2599  pydoc3 breezyslam
 2600  ll
 2601  cd examples/
 2602  python log2png.py 
 2603  cd ..
 2604  cd python
 2605  more setup.py 
 2606  sudo python3 setup.py install
 2607  make
 2608  ll
 2609  cd build/
 2610  ll
 2611  cd ..
 2612  ll
 2613  cd ..
 2614  ll
 2615  cd examples/
 2616  ll
 2617  more Makefile 
 2618  vi Makefile 
 2619  make pytest
 2620  vi Makefile 
 2621  make all
 2622  make pytest
 2623  ln -s /usr/local/lib/python3.6/dist-packages/breezyslam/ .
 2624  ll
 2625  make pytest
 2626  ls -ls /dev/cu.*
 2627  rosversion -d
 2628  ls -l /dev | grep ttyUSB
 2629  sudo apt-get install cmake python-catkin-pkg python-empy python-nose python-setuptools libgtest-dev python-rosinstall python-rosinstall-generator python-wstool build-essential git
 2630  sudo apt autoremove
 2631  make pytest
 2632  ll
 2633  rm breezyslam
 2634  make pytest
 2635  printenv > /tmp/tmp-17912jbEhHiWgQsD8txt
 2636  rviz
 2637  ll /dev/ttyUSB*
 2638  chmod 777 /dev/USB0
 2639  chmod 777 /dev/ttyUSB0
 2640  sudo chmod 777 /dev/ttyUSB0
 2641  ll /dev/ttyUSB*
 2642  ros2
 2643  roscore
 2644  cd projects/
 2645  cd ldrobot-D300-lidar-test/
 2646  ll
 2647  git status
 2648  git add README.md 
 2649  git commit -m"simple test added"
 2650  git push
 2651  cd ..
 2652  git clone https://github.com/ldrobotSensorTeam/ldlidar_stl_ros.git
 2653  cd
 2654  ll
 2655  cd catkin_ws
 2656  ll
 2657  catkin_make
 2658  cd ..
 2659  cd projects/
 2660  cd ldlidar_stl_ros/
 2661  ll
 2662  cd
 2663  mkdir -p ldlidar_ros_ws/src
 2664  cd ldlidar_ros_ws/src
 2665  mv ~/projects/ldlidar_stl_ros/
 2666  mv ~/projects/ldlidar_stl_ros/ .
 2667  ll
 2668  cd ..
 2669  catkin_make
 2670  source devel/setup.bash 
 2671  $ roslaunch ldlidar_stl_ros ld06.launch
 2672  roslaunch ldlidar_stl_ros ld06.launch
 2673  lsusb
 2674  ll /dev/tty*
 2675  cd projects/
 2676  git clone https://github.com/henjin0/LIDAR_LD06_python_loder.git
 2677  ll
 2678  git clone https://github.com/connected-autonomous-mobility/ldrobot-D300-lidar-test.git
 2679  cd ldrobot-D300-lidar-test/
 2680  git status
 2681  git README.md
 2682  git added README.md
 2683  git add README.md
 2684  git commit -m"README added"
 2685  git push
 2686  cd ..
 2687  git clone https://github.com/ldrobotSensorTeam/ldlidar_stl_sdk.git
 2688  cd *stl*
 2689  ll
 2690  sh ./auto_build.sh 
 2691  ll
 2692  cd build/
 2693  ll
 2694  ./ldlidar_stl /dev/ttyUSB0
 2695  ll
 2696  cd ..
 2697  ll
 2698  cd LIDAR_LD06_python_loder/
 2699  ll
 2700  more requirements.txt 
 2701  pip install -r requirements.txt 
 2702  ll
 2703  more main.py 
 2704  python main.py 
 2705  pip instal lserial
 2706  pip install serial
 2707  more requirements.txt 
 2708  python main.py 
 2709  pip install matplotlib
 2710  python main.py 
 2711  python main.py /dev/ttyUSB0
 2712  python main.py
 2713  cd ..
 2714  cd ldrobot-D300-lidar-test/
 2715  git status
 2716  git add *
 2717  git commit -m"sdk & ros test added"
 2718  git push
 2719  cd ..
 2720  cd LIDAR_LD06_python_loder/
 2721  ll
 2722  more requirements.txt 
 2723  pip install pyserial
 2724  pip install six
 2725  python main.py 
 2726  cd ..
 2727  cd ldrobot-D300-lidar-test/
 2728  git status
 2729  giot add *
 2730  git add *
 2731  git commit -m"feat: python test added"
 2732  git push
 2733  cd
 2734  source env/bin/activate
 2735  cd projects/donkeycar
 2736  cd donkeycar
 2737  cd parts/
 2738  ll
 2739  python lidar.py 
 2740  pyenv shell 3.7.13
 2741  cd pro
 2742  cd ..
 2743  cd LIDAR_LD06_python_loder/
 2744  ll
 2745  mv CalcLidarData.py ../ldrobot-D300-lidar-test/
 2746  cd ..
 2747  cd ldrobot-D300-lidar-test/
 2748  ll
 2749  mkdir part
 2750  cd part/
 2751  ll
 2752  mv lidar.py lidar_d300.py
 2753  ll
 2754  cd ..
 2755  git pull
 2756  git status
 2757  git add *
 2758  git commit -m"feat: part template added"
 2759  git push
 2760  git status
 2761  cd part/
 2762  python lidar_d300.py 
 2763  source ~/env/bin/activate
 2764  python lidar_d300.py 
 2765  mv ../CalcLidarData.py .
 2766  python lidar_d300.py 
 2767  CLEAR
 2768  clear
 2769  python lidar_d300.py 
 2770  cd ..
 2771  git status
 2772  git add *
 2773  git commit -m"feat: frist version of part added NOT working"
 2774  git push
 2775  python lidar_d300.py 
 2776  cd part/
 2777  python lidar_d300.py 
 2778  ll
 2779  more CalcLidarData.py 
 2780  python lidar_d300.py 
 2781  cd ..
 2782  cd part/
 2783  python lidar_d300.py 
 2784  cd ..
 2785  git status
 2786  git add part/
 2787  git commit -m"feat: first raw version showing data"
 2788  git push
 2789  sudo shutdown
 2790  sudo halt
 2791  sudo apt-get upgrade
 2792  sudo apt-get update
 2793  sudo apt-get upgrade
 2794  ll
 2795  cd pr
 2796  cd projects/
 2797  ll
 2798  cd ldrobot-D300-lidar-test/
 2799  ll
 2800  git status
 2801  ll
 2802  cd ..
 2803  cd LIDAR_LD06_python_loder/
 2804  ll
 2805  more main.py 
 2806  python main.py 
 2807  cp main.py ../ldrobot-D300-lidar-test/
 2808  cd ..
 2809  cd ldrobot-D300-lidar-test/
 2810  ll
 2811  mv main.py ld06?main.py
 2812  ll
 2813  mvb ld06\?main.py ld06_main.py
 2814  ll
 2815  mv ld06\?main.py ld06_main.py
 2816  ll
 2817  python ld06_main.py 
 2818  cd ..
 2819  ll
 2820  cd hybo-ilidar-test/
 2821  ll
 2822  cd part/
 2823  ll
 2824  more hybo_ilidar.py 
 2825  cd ..
 2826  ll
 2827  cd ..
 2828  ll
 2829  cd donkeycark
 2830  cd donkeycar
 2831  ll
 2832  git status\
 2833  git show
 2834  cd ..
 2835  git status
 2836  cd donkeycar
 2837  cd parts/
 2838  ll
 2839  cp lidar.py ~/projects/ldrobot-D300-lidar-test/part/
 2840  source ~/env/bin/activate
 2841  ll
 2842  cd
 2843  cd projects/
 2844  cd ldrobot-D300-lidar-test/
 2845  ll
 2846  python ld06_main.py 
 2847  ln -s part/CalcLidarData.py .
 2848  ll
 2849  python ld06_main.py 
 2850  ll
 2851  python ld06_main.py 
 2852  cd
 2853  vi .bashrc
 2854  source ~/env/bin/activate
 2855  pyenv shell 3.7.13
 2856  cd ldrobot-D300-lidar-test/
 2857  ll
 2858  cd part/
 2859  ll
 2860  python lidar_d300.py 
 2861  source ~/env/bin/activate
 2862  python lidar_d300.py 
 2863  pyenv shell 3.7.13
 2864  /home/rainer/.pyenv/versions/3.7.13/bin/python /home/rainer/projects/ldrobot-D300-lidar-test/part/lidar_d300.py
 2865  source ~/env/bin/activate
 2866  /home/rainer/.pyenv/versions/3.7.13/bin/python /home/rainer/projects/ldrobot-D300-lidar-test/part/lidar_d300.py
 2867  source env/bin/activate
 2868  cd projects/
 2869  cd ldrobot-D300-lidar-test/
 2870  ll
 2871  python ld06_main.py 
 2872  git status
 2873  git add part/
 2874  git commit -m"feat: lidar part delivers measurements BUT distances seem way too small"
 2875  git push
 2876  sud reboot
 2877  sudo reboot
 2878  source env/bin/activate
 2879  cd projects/
 2880  cd donkeycar
 2881  cd parts/
 2882  python lidar.py 
 2883  source env/bin/activate
 2884  cd projects/
 2885  cd ldrobot-D300-lidar-test/
 2886  cd part/
 2887  ll
 2888  python lidar_d300.py 
 2889  python lidar_d300.py -n 400
 2890  python lidar_d300.py -n 40
 2891  python lidar_d300.py -n 40 -min_distance=0
 2892  python lidar_d300.py -n 40 -d 0=0
 2893  python lidar_d300.py -n 40 -d 0
 2894  python lidar_d300.py -n 40 -d 0 -D 12000
 2895  source env/bin/activate
 2896  cd projects/
 2897  cd ldrobot-D300-lidar-test/
 2898  ll
 2899  python ld06_main.py 
 2900  ll
 2901  cd projects/
 2902  ll
 2903  cd install
 2904  cd installDonkeycarJetsonNanoJP46/
 2905  ll
 2906  git status
 2907  ll
 2908  git add *
 2909  git commit -m "final changes for PoC JP 4.6 running donkeycar on Jetson Nano 4GB"
 2910  git push
 2911  gh auth login
 2912  git push
 2913  git pull
 2914  ll
 2915  git status
 2916  git add .
 2917  git commit -m "final changes for PoC JP 4.6 running donkeycar on Jetson Nano 4GB"
 2918  git status
 2919  git push
 2920  python -V
 2921  python
 2922  cd
 2923  vi .bashrc
 2924  ll
 2925  donkey
 2926  ll
 2927  cd env/
 2928  ll
 2929  pyvenv
 2930  :q!
 2931  ll
 2932  conda
 2933  venv
 2934  ll
 2935  cd
 2936  ll
 2937  history 
 2938  source env/bin/activate
 2939  donkey
 2940  python -V
 2941  python
 2942  mv history_jp46-n7.log projects/installDonkeycarJetsonNanoJP46/
 2943  cd projects/installDonkeycarJetsonNanoJP46/
 2944  git status 
 2945  ll
 2946  cd logs/
 2947  ll
 2948  cd ..
 2949  vi .gitignore 
 2950  git status
 2951  git add .
 2952  git commit -m "history_jp46-n7.log added"
 2953  git push
 2954  history -h
 2955  history ---help
 2956  history 
 2957  history --help
 2958  history -n
 2959  history 
 2960  more history_jp46-n7.log 
 2961  history -n
 2962  history --help
 2963  git pull
 2964  git status
 2965  git stash
 2966  git status
 2967  git stash
 2968  git add .
 2969  git commit -m "history_jp46-n7.log added"
 2970  git push
 2971  git status
 2972  cd logs/
 2973  ll
 2974  more settings.md 
 2975  cd
 2976  vi .bashrc
 2977  . .bashrc
 2978  vi .bashrc
 2979  . .bashrc
 2980  vi .bashrc
 2981  ll .bashr*
 2982  more .bashrc.swp 
 2983  vi .bashrc
 2984  . .bashrc
 2985  vi .bashrc
 2986  . .bashrc
 2987  history `
 2988  q
 2989  history
 2990  history|more
 2991  cd 
 2992  cd projects/installDonkeycarJetsonNanoJP46/
 2993  cd logs/
 2994  ll
 2995  history |grep history
 2996  history > history_jp46-n7.log
